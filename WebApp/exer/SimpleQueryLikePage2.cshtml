@{
    Layout = "~/_Layout.cshtml";
    Page.Title = string.Format("Razor - {0}", "Partial Name Query with SQL LIKE Page 2");

    //output variable
    string artistid = "";
    string artistname = "";

    //reteive the passed data value
    //to retreive the passed data use .QueryString["label"]
    //data is returned as a string
    var cid = Request.QueryString["cid"];

    //good practice
    //check that you actually retreived data
    if (string.IsNullOrEmpty(cid))
    {
        Response.Redirect("SimpleQueryLikePage1.cshtml");
    }

    //this page will access the database when the submit button is pressed
    //the project needs access to 2 more NuGet packages
    //Microsoft.Aspnet.WebPages.Data
    //Microsoft.Aspnet.Webpages.WebData

    //connect to the database
    //use the name attribute off your web connection string

    var db = Database.Open("CHINOOK");

    //create the sql command to be executed on the database
    //input parameters will be represented by the use of placeholders
    //placeholders are indexes (0, 1, 2,...)
    //your command can use multiple placeholders

    //how to use the LIKE command in SQL
    //WHERE Name LIKE 'a%'	Finds any values that start with "a"
    //WHERE Name LIKE '%a'	Finds any values that end with "a"
    //WHERE Name LIKE '%or%'	Finds any values that have "or" in any position
    //WHERE Name LIKE '_r%'	Finds any values that have "r" in the second position
    //WHERE Name LIKE 'a__%'	Finds any values that start with "a" and are at least 3 characters in length
    //WHERE Name LIKE 'a%o'	Finds any values that start with "a" and ends with "o"

    string sqlcommand1 = "SELECT ArtistId, Name FROM Artists WHERE Name LIKE @0 ORDER BY Name";
    var partialstring = "%" + cid + "%";
    var results = db.Query(sqlcommand1, partialstring);
    if (results.Count() == 0)
    {
        <p style="color:firebrick">There was no record returned from the Data Base</p>
    }
    else
    {
        <p style="color:darkgreen">There was @results.Count() record/s returned from the Data Base</p>
    }
}




@section banner {
    <h1>@Page.Title</h1>
}





<table>
    <thead>
        <tr>
            <th>ID</th>
            <th>Artist Name</th>
            <th></th>
        </tr>
    </thead>
    <tbody>

        <form id="theform" method="post">
            <div class="offset-3">
                <label id="lblCategoryList" for="CategoryList">Select product category to view:</label>
                &nbsp;&nbsp;
                <select id="CategoryList" name="CategoryList">
                    <option value="0">select ....</option>



                    @foreach (var item in results)
                    {

                        <option value="@item.artistid">@item.Name</option>





                    }

                </select>
                &nbsp;&nbsp;
                <button type="submit" id="theButton" name="theButton" value="submit"
                        class="btn btn-primary">
                    View Category Products ...
                </button>
            </div>
        </form>



        @*<form id="theform" method="post">
            <div class="offset-3">
                <label id="lblCategoryList" for="CategoryList">Select product category to view:</label>
                &nbsp;&nbsp;
                <select id="CategoryList" name="CategoryList">
                    <option value="0">select ....</option>
                    @foreach (var item in catinfo)
                    {
                        //walk through the record collection of Category records
                        //for each record in the collection you will create an option line
                        //the display text will be the CategoryName
                        //the value attribute will use the CategoryID (FKey on Products)
                        //reminder of data access on a record
                        // a) index   syntax item[index]
                        // b) property name  syntax item.PropertyName (column title on the SQL select)
                        <option value="@item.CategoryID">@item.CategoryName</option>
                    }
                </select>
                &nbsp;&nbsp;
                <button type="submit" id="theButton" name="theButton" value="submit"
                        class="btn btn-primary">
                    View Category Products ...
                </button>
            </div>
        </form>*@



    </tbody>
</table>
